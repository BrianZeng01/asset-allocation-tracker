{"version":3,"sources":["components/inputs.js","components/charts.js","components/calculations.js","components/assetManager.js","App.js","serviceWorker.js","index.js","images/currentAllocationDemo.png","images/newAllocationDemo.png"],"names":["Inputs","array","n","arr","i","push","toggleReallocate","inputs","document","getElementsByClassName","props","reallocate","j","length","style","display","required","this","className","counter","map","count","index","key","id","type","placeholder","Component","Charts","changeDisplay","state","setState","changeSort","sortBy","selectColor","colorNum","colors","pieChart","dataArray","forEach","splice","title","value","color","data","label","dataEntry","Math","round","percentage","animate","segmentsShift","center","viewBoxSize","backgroundColor","barChart","tickers","values","sort","a","b","labels","datasets","borderColor","borderWidth","height","options","text","maintainAspectRatio","legend","table","totalValue","onClick","Calculations","recalculate","calculateCurrent","elem","getElementById","calculateNew","currentAssets","toFixed","Number","EPSILON","newTotalValue","reallocatedAssets","ticker","newShares","floor","buySell","newValue","cash","console","log","prevProps","AssetManager","addAsset","localStorage","setItem","parseInt","getItem","removeAsset","collectInputs","assets","calcs","targetPercentageTotal","loops","getElementsByTagName","innerHTML","item","calculations","JSON","stringify","parse","ms","Promise","resolve","setTimeout","clear","window","location","reload","action","onSubmit","alt","src","currentAllocationDemo","newAllocationDemo","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.674654f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Inputs extends Component {\n  array = (n) => {\n    var arr = [];\n    for (var i = 1; i <= n; i++) {\n      arr.push(i);\n    }\n    return arr;\n  };\n\n  toggleReallocate = () => {\n    var inputs = document.getElementsByClassName(\"toggle\");\n    if (this.props.reallocate === \"true\") {\n      for (var j = 0; j < inputs.length; j++) {\n        inputs[j].style.display = \"inline\";\n        inputs[j].required = true;\n      }\n    } else {\n      for (var i = 0; i < inputs.length; i++) {\n        inputs[i].style.display = \"none\";\n        inputs[i].required = false;\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.toggleReallocate();\n  }\n  componentDidUpdate() {\n    this.toggleReallocate();\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"inputs\">\n          <table>\n            <tbody>\n              <tr>\n                <th>Ticker</th>\n                <th>Shares</th>\n                <th>Price</th>\n                {this.props.reallocate === \"true\" ? (\n                  <th>Target Percentage</th>\n                ) : null}\n              </tr>\n              {this.array(this.props.counter).map((count, index) => (\n                <tr className=\"input\" key={index}>\n                  <td>\n                    <input\n                      id={\"ticker\" + count}\n                      type=\"text\"\n                      required\n                      placeholder=\"APPL\"\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      id={\"shares\" + count}\n                      type=\"number\"\n                      required\n                      placeholder=\"30\"\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      id={\"price\" + count}\n                      type=\"text\"\n                      required\n                      placeholder=\"150\"\n                    ></input>\n                  </td>\n                  <td>\n                    <input\n                      className=\"toggle\"\n                      id={\"target\" + count}\n                      type=\"number\"\n                      required\n                      placeholder=\"10\"\n                    ></input>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Inputs;\n","import { PieChart } from \"react-minimal-pie-chart\";\nimport { Bar } from \"react-chartjs-2\";\nimport React, { Component } from \"react\";\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { display: \"percentage\", sortBy: \"numerically\" };\n  }\n\n  changeDisplay = () => {\n    this.state.display === \"percentage\"\n      ? this.setState({ display: \"value\" })\n      : this.setState({ display: \"percentage\" });\n  };\n\n  changeSort = () => {\n    this.state.sortBy === \"numerically\"\n      ? this.setState({ sortBy: \"alphabetically\" })\n      : this.setState({ sortBy: \"numerically\" });\n  };\n\n  selectColor = (colorNum, colors) => {\n    if (colors < 1) colors = 1; // defaults to one color - avoid divide by zero\n    return \"hsl(\" + ((120 + colorNum * (360 / colors)) % 360) + \",100%,70%)\";\n  };\n  // https://www.npmjs.com/package/react-minimal-pie-chart\n  pieChart = (arr) => {\n    var dataArray = [];\n    // var colorArray = randomColor({\n    //   count: arr.length,\n    //   luminosity: \"light\",\n    //   hue: \"#213458\",\n    // });\n    arr.forEach((arr, index) => {\n      arr.splice(-1, 1, this.selectColor(index, 20));\n      dataArray.push({\n        title: arr[0],\n        value: arr[arr.length - 2],\n        color: this.selectColor(index, 20),\n      });\n    });\n\n    return (\n      <div className=\"pieChart\">\n        <div className=\"pieChartContent\">\n          <div className=\"chart\">\n            <PieChart\n              className=\"piechart\"\n              data={dataArray}\n              label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n              animate\n              segmentsShift={0.75}\n              center={[55, 55]}\n              viewBoxSize={[110, 110]}\n            />\n          </div>\n\n          <div className=\"chartColors\">\n            {arr.map((arr, index) => (\n              <div className=\"color\" key={index}>\n                <div\n                  className=\"square\"\n                  style={{\n                    backgroundColor: arr[arr.length - 1],\n                  }}\n                ></div>\n                {arr[0]}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // https://www.educative.io/edpresso/how-to-use-chartjs-to-create-charts-in-react\n  barChart = (arr, display, sortBy) => {\n    var tickers = [];\n    var values = [];\n    if (sortBy === \"numerically\") {\n      arr.sort((a, b) => b[1] - a[1]);\n    } else {\n      arr.sort();\n    }\n\n    arr.forEach((arr) => {\n      tickers.push(arr[0]);\n      values.push(arr[display === \"percentage\" ? arr.length - 2 : 1]);\n    });\n    values.push(0);\n    var state = {\n      labels: tickers,\n      datasets: [\n        {\n          label: display === \"percentage\" ? \"Percentage\" : \"Value\",\n          backgroundColor: \"#1F77AC\",\n          borderColor: \"#213458\",\n          borderWidth: 3,\n          data: values,\n        },\n      ],\n    };\n    return (\n      <Bar\n        className=\"bar\"\n        height={350}\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text:\n              display === \"percentage\"\n                ? \"Percentage of Portfolio\"\n                : \"Asset Values\",\n          },\n          maintainAspectRatio: false,\n          legend: {\n            display: false,\n          },\n        }}\n      />\n    );\n  };\n\n  table = (arr, type, sortBy) => {\n    var totalValue = 0;\n    if (sortBy === \"numerically\") {\n      arr.sort((a, b) => b[1] - a[1]);\n    } else {\n      arr.sort();\n    }\n    arr.forEach((arr) => {\n      totalValue += arr[1];\n    });\n    return (\n      <div className=\"table\">\n        <table>\n          <tbody>\n            <tr>\n              <th>Ticker</th>\n              <th>Value</th>\n              <th>Shares</th>\n              {type === \"reallocated\" ? <th>Buy/Sell</th> : null}\n              <th>Percentage</th>\n            </tr>\n            {arr.map((arr, index) => (\n              <tr key={index}>\n                <td>{arr[0]}</td>\n                <td>{arr[1]}</td>\n                <td>{arr[2]}</td>\n                <td>{arr[3]}</td>\n                {type === \"reallocated\" ? <td>{arr[4]}</td> : null}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <h3>Total Value = {totalValue}</h3>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {this.table(this.props.dataArray, this.props.type, this.state.sortBy)}\n        {this.pieChart(this.props.dataArray)}\n        <div className=\"barChart\">\n          {this.barChart(\n            this.props.dataArray,\n            this.state.display,\n            this.state.sortBy\n          )}\n        </div>\n        <div className=\"view\">\n          <button onClick={this.changeDisplay}>\n            {this.state.display === \"percentage\"\n              ? \"View Value\"\n              : \"View Percentages\"}\n          </button>\n          <button onClick={this.changeSort}>\n            {this.state.sortBy === \"alphabetically\"\n              ? \"Sort Numerically\"\n              : \"Sort Alphabetically\"}\n          </button>\n        </div>\n      </>\n    );\n  }\n}\nexport default Charts;\n","import React, { Component } from \"react\";\nimport Charts from \"./charts.js\";\n\nclass Calculations extends Component {\n  constructor(props) {\n    super(props);\n    // current [ticker,value,shares,percentage, color]\n    // reallocated [ticker, value, shares, buysell, percentage, color]\n    this.state = { currentAssets: [], reallocatedAssets: [] };\n  }\n\n  componentDidMount() {\n    console.log(\"mounting\");\n    for (var i = 0; i < this.props.data.length; i++) {\n      var inputs = this.props.data[i];\n      document.getElementById(\"ticker\" + (i + 1)).value = inputs[0];\n      document.getElementById(\"shares\" + (i + 1)).value = inputs[1];\n      document.getElementById(\"price\" + (i + 1)).value = inputs[2];\n      if (inputs.length > 3) {\n        document.getElementById(\"target\" + (i + 1)).value = inputs[3];\n      }\n    }\n\n    this.recalculate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.recalculate();\n      console.log(\"recalculated in didupdate\");\n      if (prevProps.reallocate !== this.props.reallocate) {\n      }\n    }\n  }\n  recalculate = async () => {\n    await this.calculateCurrent();\n    var elem = document.getElementById(\"reallocatedAssets\");\n    if (this.props.reallocate === \"true\") {\n      this.calculateNew();\n      if (this.props.data[0].length >= 4) {\n        elem.style.display = \"grid\";\n      }\n    } else {\n      elem.style.display = \"none\";\n    }\n  };\n\n  calculateCurrent = () => {\n    var inputs = this.props.data;\n    var totalValue = 0;\n    var currentAssets = [];\n\n    inputs.forEach((arr) => {\n      var value = +(arr[1] * arr[2]).toFixed(2);\n      currentAssets.push([arr[0], value, arr[1]]);\n      totalValue += arr[1] * arr[2];\n    });\n    currentAssets.forEach((arr) => {\n      arr.push(\n        Math.round(((arr[1] / totalValue) * 100 + Number.EPSILON) * 100) / 100\n      );\n      arr.push(\"none\");\n    });\n\n    this.setState({ currentAssets: currentAssets });\n    this.setState({ totalValue: totalValue });\n  };\n\n  calculateNew = () => {\n    var inputs = this.props.data;\n    var newTotalValue = 0;\n    var reallocatedAssets = [];\n\n    inputs.forEach((arr) => {\n      var ticker = arr[0];\n      var newShares = Math.floor(\n        ((arr[3] / 100) * this.state.totalValue) / arr[2]\n      );\n      var buySell = newShares - arr[1];\n      var newValue = +(newShares * arr[2]).toFixed(2);\n\n      newTotalValue += newValue;\n      reallocatedAssets.push([ticker, newValue, newShares, buySell]);\n    });\n    var cash =\n      Math.round(\n        (this.state.totalValue - newTotalValue) * 100 + Number.EPSILON\n      ) / 100;\n    reallocatedAssets.push([\"CASH\", cash, 0, 0]);\n    reallocatedAssets.forEach((arr) => {\n      arr.push(\n        Math.round(\n          ((arr[1] / this.state.totalValue) * 100 + Number.EPSILON) * 100\n        ) / 100\n      );\n      arr.push(\"none\");\n    });\n\n    this.setState({ reallocatedAssets: reallocatedAssets });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"calculations\">\n          <div className=\"currentAssets\">\n            <h1>Current Allocation</h1>\n            <Charts dataArray={this.state.currentAssets} type=\"current\" />\n          </div>\n          <div id=\"reallocatedAssets\" className=\"reallocatedAssets\">\n            <h1>New Allocation</h1>\n            <Charts\n              dataArray={this.state.reallocatedAssets}\n              type=\"reallocated\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Calculations;\n","import React, { Component } from \"react\";\nimport Inputs from \"./inputs.js\";\nimport Calculations from \"./calculations.js\";\nimport currentAllocationDemo from \"../images/currentAllocationDemo.png\";\nimport newAllocationDemo from \"../images/newAllocationDemo.png\";\n\nclass AssetManager extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    if (localStorage.getItem(\"counter\")) {\n      this.state.counter = parseInt(localStorage.getItem(\"counter\"));\n    } else {\n      this.state.counter = 1;\n      localStorage.setItem(\"counter\", 1);\n    }\n    if (localStorage.getItem(\"reallocate\")) {\n      this.state.reallocate = localStorage.getItem(\"reallocate\");\n    } else {\n      this.state.reallocate = \"true\";\n      localStorage.setItem(\"reallocate\", \"true\");\n    }\n    if (localStorage.getItem(\"calculations\")) {\n      this.state.calculations = JSON.parse(\n        localStorage.getItem(\"calculations\")\n      );\n    } else {\n      this.state.calculations = [];\n    }\n    //  Test 1\n    // // ---------------------------\n    // this.state.counter = 3;\n    // this.state.reallocate = \"true\";\n    // this.state.calculations = [\n    //   [\"APPL\", 30, 150, 20],\n    //   [\"AMD\", 100, 75, 20],\n    //   [\"VFV\", 130, 70, 60],\n    // ];\n    // ----------------------------\n    // Expected Outcome = [AMD, 4200, 56shares, sell44, 19.91% ],\n    //                    [APPL, 4200,28shares,sell2,19.91%],\n    //                    [VFV, 12600, 180shares, buy50, 59.7%],\n    //                    [CASH, 100]\n    // Test 2\n    // this.state.counter = 9;\n    // this.state.reallocate = \"true\";\n    // this.state.calculations = [\n    //   [\"APPL\", 30, 150, 10],\n    //   [\"AMD\", 100, 75, 10],\n    //   [\"VFV\", 130, 70, 30],\n    //   [\"GOOG\", 10, 400, 5],\n    //   [\"FB\", 20, 250, 10],\n    //   [\"BTC\", 40, 250, 5],\n    //   [\"VGRO\", 130, 20, 15],\n    //   [\"TD\", 40, 80, 10],\n    //   [\"BYND\", 30, 200, 5],\n    // ];\n  }\n\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  addAsset = () => {\n    localStorage.setItem(\n      \"counter\",\n      parseInt(localStorage.getItem(\"counter\")) + 1\n    );\n    this.setState({ counter: parseInt(localStorage.getItem(\"counter\")) });\n  };\n\n  removeAsset = () => {\n    if (this.state.counter > 1) {\n      localStorage.setItem(\n        \"counter\",\n        parseInt(localStorage.getItem(\"counter\")) - 1\n      );\n      this.setState({ counter: localStorage.getItem(\"counter\") });\n    }\n  };\n\n  collectInputs = () => {\n    var assets = document.getElementsByClassName(\"input\");\n    var calcs = [];\n    var targetPercentageTotal = 0;\n    for (var i = 0; i < assets.length; i++) {\n      var loops;\n      var arr = [];\n      var elem = assets[i].getElementsByTagName(\"input\");\n      if (this.state.reallocate === \"true\") {\n        loops = 4;\n        targetPercentageTotal += parseInt(elem[3].value);\n      } else {\n        loops = 3;\n      }\n      if (targetPercentageTotal > 100) {\n        document.getElementById(\"error\").innerHTML =\n          \"Sum of Target Percentages must not exceed 100%\";\n        return false;\n      }\n      for (var j = 0; j < loops; j++) {\n        var item = elem[j].value;\n        if (typeof item === \"number\") {\n          arr.push(Math.round(((item * 100 + Number.EPSILON) * 100) / 100));\n        } else {\n          arr.push(item);\n        }\n      }\n      calcs.push(arr);\n    }\n\n    calcs.sort();\n    this.setState({ calculations: calcs });\n    localStorage.setItem(\"calculations\", JSON.stringify(calcs));\n    console.log(calcs);\n    console.log(\"submitted\");\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"assets\">\n          <h1>Portfolio Allocation Tool</h1>\n          <div className=\"buttons\">\n            <button onClick={this.addAsset}>Add Asset</button>\n            <button onClick={this.removeAsset}>Remove Last Asset</button>\n            <button\n              onClick={() => {\n                localStorage.setItem(\n                  \"reallocate\",\n                  localStorage.getItem(\"reallocate\") === \"true\"\n                    ? \"false\"\n                    : \"true\"\n                );\n                this.setState({\n                  reallocate: localStorage.getItem(\"reallocate\"),\n                });\n              }}\n            >\n              {this.state.reallocate === \"true\"\n                ? \"Current Allocation Only\"\n                : \"Reallocate Assets\"}\n            </button>\n            <button\n              onClick={() => {\n                localStorage.clear();\n                window.location.reload();\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          <form\n            action=\"#\"\n            onSubmit={() => {\n              this.collectInputs();\n            }}\n          >\n            <Inputs\n              counter={this.state.counter}\n              reallocate={this.state.reallocate}\n            />\n            <h4>\n              Note: Sum of Target Percentage under 100 will allocate remaining\n              percentage to cash\n            </h4>\n            <button type=\"submit\" className=\"calculate\">\n              Calculate\n            </button>\n            <div id=\"error\"></div>\n          </form>\n        </div>\n        {this.state.calculations.length >= 1 ? (\n          <Calculations\n            data={this.state.calculations}\n            reallocate={this.state.reallocate}\n          />\n        ) : (\n          <div className=\"demoImages\">\n            <h2>Demo View</h2>\n            <div>\n              <img alt=\"demoImage\" src={currentAllocationDemo}></img>\n              <img alt=\"demoImage\" src={newAllocationDemo}></img>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AssetManager;\n","import React from \"react\";\nimport AssetManager from \"./components/assetManager.js\";\nimport \"./style.css\";\n\nfunction App() {\n  return (\n    <>\n      <AssetManager />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/currentAllocationDemo.cebaf131.png\";","module.exports = __webpack_public_path__ + \"static/media/newAllocationDemo.b142bd2b.png\";"],"sourceRoot":""}